name: Dev

on:
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  # Ensure that the project could be successfully compiled
  build_check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  # Build on Linux and macOS
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: build_check
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: kikot-linux-adm64

          #- target: x86_64-unknown-linux-musl
          #  os: ubuntu-latest
          #  name: starship-x86_64-unknown-linux-musl.tar.gz

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: kikot-darwin-amd64

      #  os: [ubuntu-latest, macOS-latest]
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: |
          go build -v ./...
          ls -lah
          tar czvf ${{matrix.name}}.tar.gz go-release-action


      - name: Upload the build as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.name}}.tar.gz
          path: ${{matrix.name}}.tar.gz

  # Release
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v3

      - name: Debug
        run: |
          echo "${{ github.repository }}"
          ls -lah

      - name: Setup | Checksums
        run: for file in kikot-*/kikot-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Setup | Publish Release
        #run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=jankremlacek/go-release-action
        run: gh release edit ${{ needs.release_please.outputs.tag_name }} --draft=false --repo=${{ github.repository }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        with:
          files: kikot-*/kikot-*
          tag_name: ${{ needs.release_please.outputs.tag_name }}
