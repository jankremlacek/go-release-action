name: Dev

on:
  push:
    tags:
      - "v*.*.*"

jobs:

  # Ensure that the project could be successfully compiled
  build_check:
    name: Check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  # Build on Linux and macOS
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    needs: build_check
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            name: go-release-action-linux-adm64

          - target: x86_64-apple-darwin
            os: macOS-latest
            name: go-release-action-darwin-amd64
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19

      - name: Build
        run: |
          go build -v ./...
          ls -lah
          tar czvf ${{matrix.name}}.tar.gz go-release-action


      - name: Upload the build as an artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.name}}.tar.gz
          path: ${{matrix.name}}.tar.gz

  # Release
  release:
    name: Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup | Artifacts
        uses: actions/download-artifact@v3

      - name: Setup | Checksums
        run: for file in go-release-action-*/go-release-action-*; do openssl dgst -sha256 -r "$file" | awk '{print $1}' > "${file}.sha256"; done

      - name: Release | Add Artifacts to Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: go-release-action-*/go-release-action-*
          generate_release_notes: true
